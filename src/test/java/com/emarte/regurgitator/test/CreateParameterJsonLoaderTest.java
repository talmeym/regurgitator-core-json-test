package com.emarte.regurgitator.test;import com.emarte.regurgitator.core.*;import net.sf.json.JSONObject;import org.junit.Test;import java.util.HashSet;import static junit.framework.Assert.assertEquals;public class CreateParameterJsonLoaderTest extends JsonBaseTest {	private CreateParameterJsonLoader toTest = new CreateParameterJsonLoader();	@Test	public void testValueJson() throws Exception {		assertExpectation(getJsonObject("classpath:/CreateParameter_value.json"), "com.emarte.regurgitator.core.CreateParameter:['create-param-1',com.emarte.regurgitator.core.ParameterPrototype:['toTest1',com.emarte.regurgitator.core.StringType:[],com.emarte.regurgitator.core.ConflictPolicy:REPLACE],'parameters',com.emarte.regurgitator.core.ValueSource:[null,'value'],null]");	}	@Test	public void testFileJson() throws Exception {		assertExpectation(getJsonObject("classpath:/CreateParameter_file.json"), "com.emarte.regurgitator.core.CreateParameter:['create-param-1',com.emarte.regurgitator.core.ParameterPrototype:['toTest1',com.emarte.regurgitator.core.StringType:[],com.emarte.regurgitator.core.ConflictPolicy:REPLACE],'parameters',com.emarte.regurgitator.core.ValueSource:[null,'file-value'],null]");	}	@Test	public void testSourceJson() throws Exception {		assertExpectation(getJsonObject("classpath:/CreateParameter_source.json"), "com.emarte.regurgitator.core.CreateParameter:['create-param-1',com.emarte.regurgitator.core.ParameterPrototype:['toTest1',com.emarte.regurgitator.core.StringType:[],com.emarte.regurgitator.core.ConflictPolicy:REPLACE],'parameters',com.emarte.regurgitator.core.ValueSource:[com.emarte.regurgitator.core.ContextLocation:['context:location'],null],null]");	}	@Test	public void testSourceAndValueJson() throws Exception {		assertExpectation(getJsonObject("classpath:/CreateParameter_sourceAndValue.json"), "com.emarte.regurgitator.core.CreateParameter:['create-param-1',com.emarte.regurgitator.core.ParameterPrototype:['toTest1',com.emarte.regurgitator.core.StringType:[],com.emarte.regurgitator.core.ConflictPolicy:REPLACE],'parameters',com.emarte.regurgitator.core.ValueSource:[com.emarte.regurgitator.core.ContextLocation:['context:location'],'value'],null]");	}	@Test	public void testSourceAndFileJson() throws Exception {		assertExpectation(getJsonObject("classpath:/CreateParameter_sourceAndFile.json"), "com.emarte.regurgitator.core.CreateParameter:['create-param-1',com.emarte.regurgitator.core.ParameterPrototype:['toTest1',com.emarte.regurgitator.core.StringType:[],com.emarte.regurgitator.core.ConflictPolicy:REPLACE],'parameters',com.emarte.regurgitator.core.ValueSource:[com.emarte.regurgitator.core.ContextLocation:['context:location'],'file-value'],null]");	}	@Test	public void testProcessorJson() throws Exception {		assertExpectation(getJsonObject("classpath:/CreateParameter_processor.json"), "com.emarte.regurgitator.core.CreateParameter:['create-param-1',com.emarte.regurgitator.core.ParameterPrototype:['toTest1',com.emarte.regurgitator.core.StringType:[],com.emarte.regurgitator.core.ConflictPolicy:REPLACE],'parameters',com.emarte.regurgitator.core.ValueSource:[com.emarte.regurgitator.core.ContextLocation:['context:location'],null],com.emarte.regurgitator.test.stuff.TestValueProcessor:[]]");	}	@Test	public void testProcessorConfigJson() throws Exception {		assertExpectation(getJsonObject("classpath:/CreateParameter_processorConfig.json"), "com.emarte.regurgitator.core.CreateParameter:['create-param-1',com.emarte.regurgitator.core.ParameterPrototype:['toTest1',com.emarte.regurgitator.core.StringType:[],com.emarte.regurgitator.core.ConflictPolicy:REPLACE],'parameters',com.emarte.regurgitator.core.ValueSource:[com.emarte.regurgitator.core.ContextLocation:['context:location'],null],com.emarte.regurgitator.test.stuff.TestValueProcessor:[]]");	}	@Test	public void testFullLoadJson() throws Exception {		ConfigurationFile.loadFile("classpath:/CreateParameter_fullLoad.json");	}	private void assertExpectation(JSONObject jsonObject, String expected) throws RegurgitatorException {		assertEquals(expected, toTest.load(jsonObject, new HashSet<Object>()).toString());	}	@Test(expected = RegurgitatorException.class)	public void testNothingExceptionJson() throws Exception {		toTest.load(getJsonObject("classpath:/CreateParameter_nothing.json"), new HashSet<Object>());	}	@Test(expected = RegurgitatorException.class)	public void testMissingFileExceptionJson() throws Exception {		toTest.load(getJsonObject("classpath:/CreateParameter_missingFile.json"), new HashSet<Object>());	}}